import { Component } from "@angular/core";
import { QuestionAngular } from "../question";
import { AngularComponentFactory } from "../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../components/svg-icon/svg-icon.component";
import * as i2 from "@angular/common";
import * as i3 from "../utils/ng-show.directive";
import * as i4 from "../utils/safe-url.pipe";
export class ImageQuestionComponent extends QuestionAngular {
    ngAfterViewInit() {
        this.model.locImageLink.onChanged = () => {
            this.detectChanges();
        };
        super.ngAfterViewInit();
    }
    ngOnDestroy() {
        this.model.locImageLink.onChanged = () => { };
        super.ngOnDestroy();
    }
}
ImageQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImageQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ImageQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ImageQuestionComponent, selector: "sv-ng-image-question", usesInheritance: true, ngImport: i0, template: "<div [class]=\"model.cssClasses.root\" #contentElement>\n  <img\n    *ngIf=\"model.renderedMode === 'image'\"\n    [visible]=\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.alt]=\"model.altText || model.title\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    (load)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  /><video\n    controls\n    *ngIf=\"model.renderedMode === 'video'\"\n    [visible]=\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  ></video>\n  <iframe\n    *ngIf=\"model.renderedMode === 'youtube'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml | safeResourceUrl\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    ></iframe>\n    <div *ngIf=\"!model.locImageLink.renderedHtml || model.contentNotLoaded\" [class]=\"model.cssClasses.noImage\">\n      <svg [iconName]=\"model.cssClasses.noImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n    </div>\n</div>", components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.VisibleDirective, selector: "[visible]", inputs: ["visible"] }], pipes: { "safeResourceUrl": i4.SafeResourceUrlPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImageQuestionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-image-question",
                    templateUrl: "./image.component.html"
                }]
        }] });
AngularComponentFactory.Instance.registerComponent("image-question", ImageQuestionComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9pbWFnZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvcXVlc3Rpb25zL2ltYWdlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUU5QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7O0FBTS9ELE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxlQUFtQztJQUNwRSxlQUFlO1FBQ3RCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFNBQVMsR0FBRyxHQUFHLEVBQUU7WUFDdkMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQztRQUNGLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBQ1EsV0FBVztRQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxTQUFTLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO1FBQzdDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN0QixDQUFDOztvSEFWVSxzQkFBc0I7d0dBQXRCLHNCQUFzQixtRkNUbkMsNGhEQW1DTTs0RkQxQk8sc0JBQXNCO2tCQUpsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFdBQVcsRUFBRSx3QkFBd0I7aUJBQ3RDOztBQWNELHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxnQkFBZ0IsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFF1ZXN0aW9uQW5ndWxhciB9IGZyb20gXCIuLi9xdWVzdGlvblwiO1xuaW1wb3J0IHsgUXVlc3Rpb25JbWFnZU1vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCIuLi9jb21wb25lbnQtZmFjdG9yeVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctaW1hZ2UtcXVlc3Rpb25cIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9pbWFnZS5jb21wb25lbnQuaHRtbFwiXG59KVxuZXhwb3J0IGNsYXNzIEltYWdlUXVlc3Rpb25Db21wb25lbnQgZXh0ZW5kcyBRdWVzdGlvbkFuZ3VsYXI8UXVlc3Rpb25JbWFnZU1vZGVsPiB7XG4gIG92ZXJyaWRlIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLm1vZGVsLmxvY0ltYWdlTGluay5vbkNoYW5nZWQgPSAoKSA9PiB7XG4gICAgICB0aGlzLmRldGVjdENoYW5nZXMoKTtcbiAgICB9O1xuICAgIHN1cGVyLm5nQWZ0ZXJWaWV3SW5pdCgpO1xuICB9XG4gIG92ZXJyaWRlIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMubW9kZWwubG9jSW1hZ2VMaW5rLm9uQ2hhbmdlZCA9ICgpID0+IHt9O1xuICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gIH1cbn1cblxuQW5ndWxhckNvbXBvbmVudEZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJDb21wb25lbnQoXCJpbWFnZS1xdWVzdGlvblwiLCBJbWFnZVF1ZXN0aW9uQ29tcG9uZW50KTsiLCI8ZGl2IFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLnJvb3RcIiAjY29udGVudEVsZW1lbnQ+XG4gIDxpbWdcbiAgICAqbmdJZj1cIm1vZGVsLnJlbmRlcmVkTW9kZSA9PT0gJ2ltYWdlJ1wiXG4gICAgW3Zpc2libGVdPVwiISFtb2RlbC5sb2NJbWFnZUxpbmsucmVuZGVyZWRIdG1sICYmICFtb2RlbC5jb250ZW50Tm90TG9hZGVkXCJcbiAgICBbY2xhc3NdPVwibW9kZWwuZ2V0SW1hZ2VDc3MoKVwiXG4gICAgW2F0dHIuc3JjXT1cIm1vZGVsLmxvY0ltYWdlTGluay5yZW5kZXJlZEh0bWxcIlxuICAgIFthdHRyLmFsdF09XCJtb2RlbC5hbHRUZXh0IHx8IG1vZGVsLnRpdGxlXCJcbiAgICBbYXR0ci53aWR0aF09XCJtb2RlbC5yZW5kZXJlZFdpZHRoXCJcbiAgICBbYXR0ci5oZWlnaHRdPVwibW9kZWwucmVuZGVyZWRIZWlnaHRcIlxuICAgIFtzdHlsZV09XCJ7IG9iamVjdEZpdDogbW9kZWwuaW1hZ2VGaXQgfVwiXG4gICAgKGxvYWQpPVwibW9kZWwub25Mb2FkSGFuZGxlcigpXCJcbiAgICAoZXJyb3IpPVwibW9kZWwub25FcnJvckhhbmRsZXIoKVwiXG4gIC8+PHZpZGVvXG4gICAgY29udHJvbHNcbiAgICAqbmdJZj1cIm1vZGVsLnJlbmRlcmVkTW9kZSA9PT0gJ3ZpZGVvJ1wiXG4gICAgW3Zpc2libGVdPVwiISFtb2RlbC5sb2NJbWFnZUxpbmsucmVuZGVyZWRIdG1sICYmICFtb2RlbC5jb250ZW50Tm90TG9hZGVkXCJcbiAgICBbY2xhc3NdPVwibW9kZWwuZ2V0SW1hZ2VDc3MoKVwiXG4gICAgW2F0dHIuc3JjXT1cIm1vZGVsLmxvY0ltYWdlTGluay5yZW5kZXJlZEh0bWxcIlxuICAgIFthdHRyLndpZHRoXT1cIm1vZGVsLnJlbmRlcmVkV2lkdGhcIlxuICAgIFthdHRyLmhlaWdodF09XCJtb2RlbC5yZW5kZXJlZEhlaWdodFwiXG4gICAgW3N0eWxlXT1cInsgb2JqZWN0Rml0OiBtb2RlbC5pbWFnZUZpdCB9XCJcbiAgICAobG9hZGVkbWV0YWRhdGEpPVwibW9kZWwub25Mb2FkSGFuZGxlcigpXCJcbiAgICAoZXJyb3IpPVwibW9kZWwub25FcnJvckhhbmRsZXIoKVwiXG4gID48L3ZpZGVvPlxuICA8aWZyYW1lXG4gICAgKm5nSWY9XCJtb2RlbC5yZW5kZXJlZE1vZGUgPT09ICd5b3V0dWJlJ1wiXG4gICAgW2NsYXNzXT1cIm1vZGVsLmdldEltYWdlQ3NzKClcIlxuICAgIFthdHRyLnNyY109XCJtb2RlbC5sb2NJbWFnZUxpbmsucmVuZGVyZWRIdG1sIHwgc2FmZVJlc291cmNlVXJsXCJcbiAgICBbYXR0ci53aWR0aF09XCJtb2RlbC5yZW5kZXJlZFdpZHRoXCJcbiAgICBbYXR0ci5oZWlnaHRdPVwibW9kZWwucmVuZGVyZWRIZWlnaHRcIlxuICAgIFtzdHlsZV09XCJ7IG9iamVjdEZpdDogbW9kZWwuaW1hZ2VGaXQgfVwiXG4gICAgPjwvaWZyYW1lPlxuICAgIDxkaXYgKm5nSWY9XCIhbW9kZWwubG9jSW1hZ2VMaW5rLnJlbmRlcmVkSHRtbCB8fCBtb2RlbC5jb250ZW50Tm90TG9hZGVkXCIgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMubm9JbWFnZVwiPlxuICAgICAgPHN2ZyBbaWNvbk5hbWVdPVwibW9kZWwuY3NzQ2xhc3Nlcy5ub0ltYWdlU3ZnSWNvbklkXCIgW3NpemVdPVwiNDhcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICA8L2Rpdj5cbjwvZGl2PiJdfQ==